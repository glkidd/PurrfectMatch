{"ast":null,"code":"var _jsxFileName = \"/Users/ajjiro/Desktop/PurrfectMatchGit/PurrfectMatch/purrfect-match/src/inputBoxes.tsx\";\nimport React from 'react';\nimport \"./ContactPage.css\";\nexport class Input extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      if (this.props.onchange) {\n        if (event && event.target && event.target.value) {\n          this.props.onchange(event.target.value);\n        } else {\n          this.props.onchange(\"\");\n        }\n      }\n    };\n\n    this.state = {};\n  }\n\n  render() {\n    let errorDiv = this.props.error ? React.createElement(\"div\", {\n      className: \"inputError\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, this.props.error) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    });\n    return React.createElement(\"div\", {\n      className: \"inputElem\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, this.props.prompt), React.createElement(\"div\", {\n      className: \"inputField\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"fname\",\n      className: \"textBox\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    })), errorDiv);\n  }\n\n}\nexport class Select extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      if (this.props.onchange) {\n        if (event && event.target && event.target.value) {\n          this.props.onchange(event.target.value);\n        } else {\n          this.props.onchange(\"\");\n        }\n      }\n    };\n  }\n\n  render() {\n    let optionArray = this.props.options.map(option => React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, option));\n    let errorDiv = this.props.error ? React.createElement(\"div\", {\n      className: \"inputError\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, this.props.error) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    });\n    return React.createElement(\"div\", {\n      className: \"inputElem\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, this.props.prompt), React.createElement(\"select\", {\n      style: {\n        width: \"150px\",\n        height: \"1.5em\"\n      },\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      disabled: true,\n      selected: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \" Select an option \"), optionArray), errorDiv);\n  }\n\n}\nexport class Message extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleChange = event => {\n      if (this.props.onchange) {\n        if (event && event.target && event.target.value) {\n          this.props.onchange(event.target.value);\n        } else {\n          this.props.onchange(\"\");\n        }\n      }\n    };\n  }\n\n  render() {\n    let errorDiv = this.props.error ? React.createElement(\"div\", {\n      className: \"inputError\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, this.props.error) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    });\n    return React.createElement(\"div\", {\n      className: \"inputElem\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, this.props.prompt), React.createElement(\"div\", {\n      className: \"inputField\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      rows: 20,\n      cols: 60,\n      className: \"textBox message\",\n      placeholder: \"Type your message here...\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    })), errorDiv);\n  }\n\n}\nexport class Send extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = event => {\n      if (this.props.onclick) {\n        this.props.onclick();\n      }\n    };\n\n    this.state = {};\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"inputElem\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/ajjiro/Desktop/PurrfectMatchGit/PurrfectMatch/purrfect-match/src/inputBoxes.tsx"],"names":["React","Input","Component","constructor","props","handleChange","event","onchange","target","value","state","render","errorDiv","error","prompt","Select","optionArray","options","map","option","width","height","Message","Send","handleSubmit","onclick"],"mappings":"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","sourcesContent":["import React from 'react';\nimport \"./ContactPage.css\"\n\ninterface inputProps {\n    prompt: string;\n    error?: string;\n    onchange?: (newVal: string) => void;\n}\n\ninterface optionProps{\n    prompt: string;\n    options: string[];\n    error?: string;\n    onchange?: (newVal: string) => void;\n}\n\ninterface SubmitProps {\n    onclick?: () => void;\n}\nexport class Input extends React.Component<inputProps, {}> {\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n\n        }\n    }\n\n    handleChange = (event: any) => {\n        if (this.props.onchange) {\n            if (event && event.target && event.target.value) {\n                this.props.onchange(event.target.value);\n            } else {\n                this.props.onchange(\"\");\n            }\n        }\n    }\n\n    public render() {\n        let errorDiv = this.props.error ? <div className=\"inputError\">{this.props.error}</div> : <div />;\n        return (\n            <div className=\"inputElem\">\n                <div className=\"label\">\n                    {this.props.prompt} \n                </div>\n                <div className=\"inputField\">\n                    <input type=\"text\" name=\"fname\" className=\"textBox\" onChange={this.handleChange} />\n                </div>\n                {errorDiv}\n            </div>\n        );\n    }\n}\n\nexport class Select extends React.Component<optionProps, {}> {\n\n    constructor(props : any) {\n        super(props);\n    }\n\n    handleChange = (event: any) => {\n        if (this.props.onchange) {\n            if (event && event.target && event.target.value) {\n                this.props.onchange(event.target.value);\n            } else {\n                this.props.onchange(\"\");\n            }\n        }\n    }\n\n    public render() {\n        let optionArray = this.props.options.map((option) => <option>{option}</option>);\n        let errorDiv = this.props.error ? <div className=\"inputError\">{this.props.error}</div> : <div />;\n\n        return (\n            <div className=\"inputElem\">\n                <div className=\"label\">\n                    {this.props.prompt} \n                </div>\n                <select style={{ width: \"150px\", height: \"1.5em\" }} onChange={this.handleChange} >\n                    <option disabled selected> Select an option </option>\n                    {optionArray}\n                </select>\n                {errorDiv}\n            </div>\n        );\n    }\n}\n\nexport class Message extends React.Component<inputProps, {}> {\n\n    handleChange = (event: any) => {\n        if (this.props.onchange) {\n            if (event && event.target && event.target.value) {\n                this.props.onchange(event.target.value);\n            } else {\n                this.props.onchange(\"\");\n            }\n        }\n    }\n\n    public render() {\n        let errorDiv = this.props.error ? <div className=\"inputError\">{this.props.error}</div> : <div />;\n        return (\n            <div className=\"inputElem\">\n                <div className=\"label\">\n                    {this.props.prompt}\n                </div>\n                <div className=\"inputField\">\n                    <textarea rows={20} cols={60} className=\"textBox message\" placeholder=\"Type your message here...\" onChange={this.handleChange} />\n                </div>\n                {errorDiv}\n            </div>\n        );\n    }\n}\n\nexport class Send extends React.Component<SubmitProps, {}> {\n\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n\n        };\n    }\n    handleSubmit = (event: any) => {\n        if (this.props.onclick) {\n            this.props.onclick();\n        }\n    }\n\n    public render() {\n        return (\n            <div className=\"inputElem\">\n                <button onClick={this.handleSubmit}> \n                    Submit\n                </button>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}