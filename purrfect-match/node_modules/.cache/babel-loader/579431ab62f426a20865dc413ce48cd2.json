{"ast":null,"code":"var _jsxFileName = \"/Users/ajjiro/Desktop/PurrfectMatchGit/PurrfectMatch/purrfect-match/src/ContactPage.tsx\";\nimport React from 'react';\nimport './ContactPage.css';\nimport { Input, Select, Message, Send } from './inputBoxes';\nimport { Api } from \"Api\";\n;\n;\nconst OPTION_ARRAY = [\"Yes\", \"No\"];\nexport class ContactPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.fillAndValidateField = field => {\n      if (this.state[field] === undefined) {\n        this.setState({\n          [field]: \"\"\n        });\n        return false;\n      } else {\n        return this.state[field] != \"\";\n      }\n    };\n\n    this.handleSubmit = () => {\n      let formValid = true; // Validate all fields filled\n\n      for (let elem of [\"firstName\", \"lastName\", \"subject\", \"email\", \"shelterEmployee\", \"message\"]) {\n        if (!this.fillAndValidateField(elem)) {\n          formValid = false;\n        }\n      }\n\n      if (formValid) {\n        // @ts-ignore: Strict null checks, but we know they're non-null from the validation we just did\n        Api.submitContactInfo(this.state.firstName, this.state.lastName, this.state.subject, this.state.email, this.state.shelterEmployee, this.state.message);\n      }\n    };\n\n    this.checkField = (fieldVal, error) => {\n      if (fieldVal == \"\") {\n        return error;\n      }\n\n      return undefined;\n    };\n\n    this.state = {\n      firstName: undefined,\n      lastName: undefined,\n      subject: undefined,\n      email: undefined,\n      shelterEmployee: undefined,\n      message: undefined\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"contactPage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Contact Us!\"), React.createElement(\"div\", {\n      className: \"contactBoxes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Input, {\n      prompt: \"First Name:\",\n      error: this.checkField(this.state.firstName, \"Provide your first name.\"),\n      onchange: newValue => this.setState({\n        firstName: newValue\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(Input, {\n      prompt: \"Last Name:\",\n      error: this.checkField(this.state.lastName, \"Provide your last name.\"),\n      onchange: newValue => this.setState({\n        lastName: newValue\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(Input, {\n      prompt: \"Subject:\",\n      error: this.checkField(this.state.subject, \"Provide a subject.\"),\n      onchange: newValue => this.setState({\n        subject: newValue\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(Input, {\n      prompt: \"Email Address:\",\n      error: this.checkField(this.state.email, \"Provide your email.\"),\n      onchange: newValue => this.setState({\n        email: newValue\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"contactBoxes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"contactText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Are you a shelter and need help with your account?\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), \"Are you a potential pet owner with comments or\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), \"concerns? Send us a note here! \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), \"Or you can reach us at purrfectmatch@gmail.com\")), React.createElement(Select, {\n      prompt: \"Are you a shelter employee?\",\n      options: OPTION_ARRAY,\n      error: this.checkField(this.state.shelterEmployee, \"Choose an option.\"),\n      onchange: newValue => this.setState({\n        shelterEmployee: newValue\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"contactBoxes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Message, {\n      prompt: \"Message:\",\n      error: this.checkField(this.state.message, \"Please write a message.\"),\n      onchange: newValue => this.setState({\n        message: newValue\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    })), React.createElement(Send, {\n      onclick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/ajjiro/Desktop/PurrfectMatchGit/PurrfectMatch/purrfect-match/src/ContactPage.tsx"],"names":["React","Input","Select","Message","Send","Api","OPTION_ARRAY","ContactPage","Component","constructor","props","fillAndValidateField","field","state","undefined","setState","handleSubmit","formValid","elem","submitContactInfo","firstName","lastName","subject","email","shelterEmployee","message","checkField","fieldVal","error","render","newValue"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,mBAAP;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,OAAxB,EAAiCC,IAAjC,QAA6C,cAA7C;AACA,SAASC,GAAT,QAAoB,KAApB;AAEC;AASA;AAED,MAAMC,YAAY,GAAG,CAAC,KAAD,EAAQ,IAAR,CAArB;AAEA,OAAO,MAAMC,WAAN,SAA0BP,KAAK,CAACQ,SAAhC,CAA8E;AAEjFC,EAAAA,WAAW,CAACC,KAAD,EAAc;AACrB,UAAMA,KAAN;;AADqB,SAazBC,oBAbyB,GAaDC,KAAD,IAA4C;AAC/D,UAAI,KAAKC,KAAL,CAAWD,KAAX,MAAsBE,SAA1B,EAAqC;AACjC,aAAKC,QAAL,CAAc;AACV,WAACH,KAAD,GAAS;AADC,SAAd;AAGA,eAAO,KAAP;AACH,OALD,MAKO;AACH,eAAO,KAAKC,KAAL,CAAWD,KAAX,KAAqB,EAA5B;AACH;AACJ,KAtBwB;;AAAA,SAwBzBI,YAxByB,GAwBV,MAAO;AAClB,UAAIC,SAAS,GAAG,IAAhB,CADkB,CAElB;;AACA,WAAK,IAAIC,IAAT,IAAiB,CAAC,WAAD,EAAc,UAAd,EAA0B,SAA1B,EAAqC,OAArC,EAA8C,iBAA9C,EAAiE,SAAjE,CAAjB,EAA8F;AAC1F,YAAI,CAAC,KAAKP,oBAAL,CAA0BO,IAA1B,CAAL,EAAgE;AAC5DD,UAAAA,SAAS,GAAG,KAAZ;AACH;AACJ;;AACD,UAAIA,SAAJ,EAAe;AACX;AACAZ,QAAAA,GAAG,CAACc,iBAAJ,CAAsB,KAAKN,KAAL,CAAWO,SAAjC,EAA4C,KAAKP,KAAL,CAAWQ,QAAvD,EAAiE,KAAKR,KAAL,CAAWS,OAA5E,EAAqF,KAAKT,KAAL,CAAWU,KAAhG,EAAuG,KAAKV,KAAL,CAAWW,eAAlH,EAAmI,KAAKX,KAAL,CAAWY,OAA9I;AACH;AACJ,KApCwB;;AAAA,SAsCzBC,UAtCyB,GAsCZ,CAACC,QAAD,EAA+BC,KAA/B,KAAqE;AAC9E,UAAID,QAAQ,IAAI,EAAhB,EAAoB;AAChB,eAAOC,KAAP;AACH;;AACD,aAAOd,SAAP;AACH,KA3CwB;;AAGrB,SAAKD,KAAL,GAAa;AACTO,MAAAA,SAAS,EAAEN,SADF;AAETO,MAAAA,QAAQ,EAAEP,SAFD;AAGTQ,MAAAA,OAAO,EAAER,SAHA;AAITS,MAAAA,KAAK,EAAET,SAJE;AAKTU,MAAAA,eAAe,EAAEV,SALR;AAMTW,MAAAA,OAAO,EAAEX;AANA,KAAb;AAQH;;AAkCMe,EAAAA,MAAP,GAAgB;AACZ,WACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AACI,MAAA,MAAM,EAAC,aADX;AAEI,MAAA,KAAK,EAAE,KAAKH,UAAL,CAAgB,KAAKb,KAAL,CAAWO,SAA3B,EAAsC,0BAAtC,CAFX;AAGI,MAAA,QAAQ,EAAGU,QAAD,IAAsB,KAAKf,QAAL,CAAc;AAAEK,QAAAA,SAAS,EAAEU;AAAb,OAAd,CAHpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAMI,oBAAC,KAAD;AACI,MAAA,MAAM,EAAC,YADX;AAEI,MAAA,KAAK,EAAE,KAAKJ,UAAL,CAAgB,KAAKb,KAAL,CAAWQ,QAA3B,EAAqC,yBAArC,CAFX;AAGI,MAAA,QAAQ,EAAGS,QAAD,IAAsB,KAAKf,QAAL,CAAc;AAAEM,QAAAA,QAAQ,EAAES;AAAZ,OAAd,CAHpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,EAWI,oBAAC,KAAD;AACI,MAAA,MAAM,EAAC,UADX;AAEI,MAAA,KAAK,EAAE,KAAKJ,UAAL,CAAgB,KAAKb,KAAL,CAAWS,OAA3B,EAAoC,oBAApC,CAFX;AAGI,MAAA,QAAQ,EAAGQ,QAAD,IAAsB,KAAKf,QAAL,CAAc;AAAEO,QAAAA,OAAO,EAAEQ;AAAX,OAAd,CAHpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXJ,EAgBI,oBAAC,KAAD;AACI,MAAA,MAAM,EAAC,gBADX;AAEI,MAAA,KAAK,EAAE,KAAKJ,UAAL,CAAgB,KAAKb,KAAL,CAAWU,KAA3B,EAAkC,qBAAlC,CAFX;AAGI,MAAA,QAAQ,EAAGO,QAAD,IAAsB,KAAKf,QAAL,CAAc;AAAEQ,QAAAA,KAAK,EAAEO;AAAT,OAAd,CAHpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBJ,CAFJ,EAwBI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DACsD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADtD,oDAEkD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFlD,qCAGmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHnC,mDADJ,CADJ,EASI,oBAAC,MAAD;AACI,MAAA,MAAM,EAAC,6BADX;AAEI,MAAA,OAAO,EAAExB,YAFb;AAGI,MAAA,KAAK,EAAE,KAAKoB,UAAL,CAAgB,KAAKb,KAAL,CAAWW,eAA3B,EAA4C,mBAA5C,CAHX;AAII,MAAA,QAAQ,EAAGM,QAAD,IAAmB,KAAKf,QAAL,CAAc;AAAES,QAAAA,eAAe,EAAEM;AAAnB,OAAd,CAJjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,CAxBJ,EAwCI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,OAAD;AACI,MAAA,MAAM,EAAC,UADX;AAEI,MAAA,KAAK,EAAE,KAAKJ,UAAL,CAAgB,KAAKb,KAAL,CAAWY,OAA3B,EAAoC,yBAApC,CAFX;AAGI,MAAA,QAAQ,EAAGK,QAAD,IAAsB,KAAKf,QAAL,CAAc;AAAEU,QAAAA,OAAO,EAAEK;AAAX,OAAd,CAHpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAxCJ,EA+CI,oBAAC,IAAD;AAAM,MAAA,OAAO,EAAE,KAAKd,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA/CJ,CADJ;AAoDH;;AApGgF","sourcesContent":["import React from 'react';\nimport './ContactPage.css';\nimport { Input, Select, Message, Send } from './inputBoxes';\nimport { Api } from \"Api\";\ninterface ContactPageProps {\n};\n\ninterface ContactPageState {\n    firstName: string | undefined;\n    lastName: string | undefined;\n    subject: string | undefined;\n    email: string | undefined;\n    shelterEmployee: \"Yes\" | \"No\" | \"\" | undefined;\n    message: string | undefined;\n};\n\nconst OPTION_ARRAY = [\"Yes\", \"No\"];\n\nexport class ContactPage extends React.Component<ContactPageProps, ContactPageState> {\n\n    constructor(props : any) {\n        super(props);\n\n        this.state = {\n            firstName: undefined,\n            lastName: undefined,\n            subject: undefined,\n            email: undefined,\n            shelterEmployee: undefined,\n            message: undefined\n        };\n    }\n\n    fillAndValidateField = (field: keyof ContactPageState): boolean => {\n        if (this.state[field] === undefined) {\n            this.setState({\n                [field]: \"\"\n            } as any);\n            return false;\n        } else {\n            return this.state[field] != \"\";\n        }\n    }\n\n    handleSubmit = ()  => {\n        let formValid = true;\n        // Validate all fields filled\n        for (let elem of [\"firstName\", \"lastName\", \"subject\", \"email\", \"shelterEmployee\", \"message\"]) {\n            if (!this.fillAndValidateField(elem as keyof ContactPageState)) {\n                formValid = false;\n            }\n        }\n        if (formValid) {\n            // @ts-ignore: Strict null checks, but we know they're non-null from the validation we just did\n            Api.submitContactInfo(this.state.firstName, this.state.lastName, this.state.subject, this.state.email, this.state.shelterEmployee, this.state.message);\n        }\n    }\n\n    checkField = (fieldVal: string | undefined, error: string): string | undefined => {\n        if (fieldVal == \"\") {\n            return error;\n        }\n        return undefined;\n    }\n\n    public render() {\n        return (\n            <div className=\"contactPage\">\n                <h2 className=\"header\">Contact Us!</h2>\n                <div className=\"contactBoxes\">\n                    <Input\n                        prompt=\"First Name:\"\n                        error={this.checkField(this.state.firstName, \"Provide your first name.\")}\n                        onchange={(newValue: string) => this.setState({ firstName: newValue })}\n                    />\n                    <Input\n                        prompt=\"Last Name:\"\n                        error={this.checkField(this.state.lastName, \"Provide your last name.\")}\n                        onchange={(newValue: string) => this.setState({ lastName: newValue })}\n                    />\n                    <Input\n                        prompt=\"Subject:\"\n                        error={this.checkField(this.state.subject, \"Provide a subject.\")}\n                        onchange={(newValue: string) => this.setState({ subject: newValue })}\n                    />\n                    <Input\n                        prompt=\"Email Address:\"\n                        error={this.checkField(this.state.email, \"Provide your email.\")}\n                        onchange={(newValue: string) => this.setState({ email: newValue })}\n                    />\n                </div>\n                <div className=\"contactBoxes\">\n                    <div className=\"contactText\">\n                        <p>\n                            Are you a shelter and need help with your account?<br />\n                            Are you a potential pet owner with comments or<br />\n                            concerns? Send us a note here! <br />\n                            Or you can reach us at purrfectmatch@gmail.com\n                        </p>\n                    </div>\n                    <Select\n                        prompt=\"Are you a shelter employee?\"\n                        options={OPTION_ARRAY}\n                        error={this.checkField(this.state.shelterEmployee, \"Choose an option.\")}\n                        onchange={(newValue: any) => this.setState({ shelterEmployee: newValue })}\n                    />\n                </div>\n                <div className=\"contactBoxes\">\n                    <Message\n                        prompt=\"Message:\"\n                        error={this.checkField(this.state.message, \"Please write a message.\")}\n                        onchange={(newValue: string) => this.setState({ message: newValue })}\n                    />\n                </div>\n                <Send onclick={this.handleSubmit} />\n            </div>\n\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}